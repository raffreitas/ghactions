name: Build Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Versioning

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - uses: codacy/git-version@2.8.0
        id: version
        with:
          release-branch: main
          prefix: v

      - name: Tag the repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'

  backend-build-and-tests:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Build and Tests
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          cache: true
          cache-dependency-path: ./src/**/packages.lock.json

      - name: Restore
        run: |
          dotnet restore ./src/Todo.Api.sln

      - name: Build
        run: |
          dotnet build --no-restore --configuration Release ./src/Todo.Api.sln

      - name: Tests
        run: |
          dotnet test ./src/Todo.Api.sln --no-restore --no-build --configuration Release --logger trx --results-directory "TestResults"

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: TestResults

  backend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Lint
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: github/super-linter@v6
        env:
          DEFAULT_BRANCH: "main"
          VALIDATE_ALL_CODEBASE: "false"
          VALIDATE_YAML: "true"
          VALIDATE_CSHARP: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  frontend-build-and-tests:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Build and Tests
    defaults:
      run:
        working-directory: ./src/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Install dependencies
        run: |
          npm ci

      - name: Test
        run: |
          npm run lint

      - name: Build
        run: |
          npm run build

  frontend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Lint
    defaults:
      run:
        working-directory: ./src/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Install dependencies
        run: |
          npm ci

      - name: Lint
        run: |
          npm run lint